<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{294B6E5A-B865-3122-A8F7-D9028AB81638}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="K:\Repo\OpenGLPAG\thirdparty\glfw\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule K:/Repo/OpenGLPAG/thirdparty/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
K:\Programs\Cmake\bin\cmake.exe -SK:/Repo/OpenGLPAG -BK:/Repo/OpenGLPAG/build --check-stamp-file K:/Repo/OpenGLPAG/build/thirdparty/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">K:\Programs\Cmake\share\cmake-3.22\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;K:\Programs\Cmake\share\cmake-3.22\Modules\CMakePackageConfigHelpers.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageMessage.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindThreads.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\WriteBasicConfigVersionFile.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\CMake\modules\FindVulkan.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3.pc.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3Config.cmake.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">K:\Repo\OpenGLPAG\build\thirdparty\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule K:/Repo/OpenGLPAG/thirdparty/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
K:\Programs\Cmake\bin\cmake.exe -SK:/Repo/OpenGLPAG -BK:/Repo/OpenGLPAG/build --check-stamp-file K:/Repo/OpenGLPAG/build/thirdparty/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">K:\Programs\Cmake\share\cmake-3.22\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;K:\Programs\Cmake\share\cmake-3.22\Modules\CMakePackageConfigHelpers.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageMessage.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindThreads.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\WriteBasicConfigVersionFile.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\CMake\modules\FindVulkan.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3.pc.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3Config.cmake.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">K:\Repo\OpenGLPAG\build\thirdparty\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule K:/Repo/OpenGLPAG/thirdparty/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
K:\Programs\Cmake\bin\cmake.exe -SK:/Repo/OpenGLPAG -BK:/Repo/OpenGLPAG/build --check-stamp-file K:/Repo/OpenGLPAG/build/thirdparty/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">K:\Programs\Cmake\share\cmake-3.22\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;K:\Programs\Cmake\share\cmake-3.22\Modules\CMakePackageConfigHelpers.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageMessage.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindThreads.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\WriteBasicConfigVersionFile.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\CMake\modules\FindVulkan.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3.pc.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3Config.cmake.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">K:\Repo\OpenGLPAG\build\thirdparty\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule K:/Repo/OpenGLPAG/thirdparty/glfw/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
K:\Programs\Cmake\bin\cmake.exe -SK:/Repo/OpenGLPAG -BK:/Repo/OpenGLPAG/build --check-stamp-file K:/Repo/OpenGLPAG/build/thirdparty/glfw/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">K:\Programs\Cmake\share\cmake-3.22\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;K:\Programs\Cmake\share\cmake-3.22\Modules\CMakePackageConfigHelpers.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckCSourceCompiles.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckIncludeFile.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\CheckLibraryExists.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageHandleStandardArgs.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindPackageMessage.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\FindThreads.cmake;K:\Programs\Cmake\share\cmake-3.22\Modules\WriteBasicConfigVersionFile.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\CMake\modules\FindVulkan.cmake;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3.pc.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw3Config.cmake.in;K:\Repo\OpenGLPAG\thirdparty\glfw\src\glfw_config.h.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">K:\Repo\OpenGLPAG\build\thirdparty\glfw\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="K:\Repo\OpenGLPAG\build\ZERO_CHECK.vcxproj">
      <Project>{657BE57F-42FC-3345-B4B4-B463ACFB6DB1}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="K:\Repo\OpenGLPAG\build\thirdparty\glfw\src\glfw.vcxproj">
      <Project>{46D9D59F-14AB-39DE-95EF-DAC4FBEB2114}</Project>
      <Name>glfw</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>